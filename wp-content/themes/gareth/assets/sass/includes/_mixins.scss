

@mixin no-border-box(){
    -webkit-box-sizing:content-box !important;
    -moz-box-sizing:content-box !important;
    box-sizing:content-box !important;
    *behavior:normal !important;
}

@mixin system-drop-shadow(){
    position:relative;

    &:after{
        position:absolute;
        bottom:0px;
        height:10px;
        width:100%;
        z-index:9;
        @include box-shadow(0 4px 3px -3px #bbb);
        content:' ';
        display:block;
    }

}

@mixin block-left(){
    display:block;
    float:left;
}

@mixin reset-box(){
    padding:0;
    margin:0;
}
    
@mixin custom-font(){
    font-family:'Open Sans', sans-serif;
}

@mixin standard-font(){
    font-family: Arial, "Helvetica Neue", Helvetica, sans-serif;
}
    

@mixin no-rounded(){
    -webkit-border-radius: 0px;
    -moz-border-radius: 0px;
    border-radius: 0px;
}

@mixin no-drop-shadow(){
    -moz-box-shadow: none;
    -webkit-box-shadow: none;
    box-shadow: none;
}


@mixin bg-gradient($from:#222, $to:#fff, $from-percentage:0%, $to-percentage:100%){

    // webkit for safari still
    background: -webkit-linear-gradient(left, $from $from-percentage,$to $to-percentage);
    background: -ms-linear-gradient(top, $from $from-percentage,$to $to-percentage);
    background: linear-gradient( to right, $from $from-percentage,$to $to-percentage);
    filter: unquote("progid:DXImageTransform.Microsoft.gradient(startColorstr='")
    + $from
    + unquote("', endColorstr='")
    + $to
    + unquote("',GradientType=1)");
}

@mixin radial-bg($from:white, $to:#f8f8f8, $from-percentage:0%, $to-percentage:100%){
    background: $to;
    background: -webkit-radial-gradient(center, ellipse cover, $from $from-percentage,$to $to-percentage);
    background: -ms-radial-gradient(center, ellipse cover, $from $from-percentage,$to $to-percentage);
    background: radial-gradient(ellipse at center, $from $from-percentage,$to $to-percentage);
    /*filter: unquote("progid:DXImageTransform.Microsoft.gradient(startColorstr='")
    + $from
    + unquote("', endColorstr='")
    + $to
    + unquote("',GradientType=1)");*/
}

@mixin grayscale($url){
    @if $url != ''{
        filter: url($url+'#grayscale');
    }
    filter: gray; 
    -webkit-filter: grayscale(1);
}

@mixin no-grayscale(){
    filter: none;
    -webkit-filter: grayscale(0);
}

@mixin box($radius:5px){
    background-color:white;
    @include border-radius($radius);
    padding:25px;
}

@mixin border-box($url:''){
    -webkit-box-sizing:border-box;
    -moz-box-sizing:border-box;
    box-sizing:border-box;
    @if $url != ''{
        *behavior:url($url);
    }
}

// RETINA SPRITES

$sprites: sprite-map("icons/*.png", $spacing: 20px);
$sprites2x: sprite-map("icons-2x/*.png", $spacing: 40px);

// Override the default sprite mixin
@mixin sprite($name){
    // uncooment for retina
    @include retina-sprite($name, $sprites, $sprites2x);
}

@mixin retina-sprite($name, $sprites, $sprites2x, $dimensions: true, $pad: 0){

    @if $dimensions == true{
        @include sprite-dimensions($sprites, $name);
    }

    background-image: sprite-url($sprites);
    background-position: sprite-position($sprites, $name, -$pad, -$pad);
    background-repeat: no-repeat;

    @if $pad > 0{
        padding: $pad
    }

    @media only screen and (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi){
        
          $pos: sprite-position($sprites2x, $name, -$pad*2, -$pad*2);
          background-image: sprite-url($sprites2x);
          background-position: nth($pos, 1) nth($pos, 2)/2;
          @include background-size( ceil(image-width(sprite-path($sprites2x)) / 2), auto );
    }
}